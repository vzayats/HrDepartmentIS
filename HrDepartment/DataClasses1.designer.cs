#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HrDepartment
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Personnel_department")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertWorker(Worker instance);
    partial void UpdateWorker(Worker instance);
    partial void DeleteWorker(Worker instance);
    partial void InsertPostGraduate(PostGraduate instance);
    partial void UpdatePostGraduate(PostGraduate instance);
    partial void DeletePostGraduate(PostGraduate instance);
    partial void InsertPassportData(PassportData instance);
    partial void UpdatePassportData(PassportData instance);
    partial void DeletePassportData(PassportData instance);
    partial void InsertFamily(Family instance);
    partial void UpdateFamily(Family instance);
    partial void DeleteFamily(Family instance);
    partial void InsertEducation(Education instance);
    partial void UpdateEducation(Education instance);
    partial void DeleteEducation(Education instance);
    partial void InsertContract(Contract instance);
    partial void UpdateContract(Contract instance);
    partial void DeleteContract(Contract instance);
    partial void InsertAddress(Address instance);
    partial void UpdateAddress(Address instance);
    partial void DeleteAddress(Address instance);
    partial void InsertMilitary(Military instance);
    partial void UpdateMilitary(Military instance);
    partial void DeleteMilitary(Military instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::HrDepartment.Properties.Settings.Default.Personnel_departmentConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Worker> Workers
		{
			get
			{
				return this.GetTable<Worker>();
			}
		}
		
		public System.Data.Linq.Table<PostGraduate> PostGraduates
		{
			get
			{
				return this.GetTable<PostGraduate>();
			}
		}
		
		public System.Data.Linq.Table<PassportData> PassportDatas
		{
			get
			{
				return this.GetTable<PassportData>();
			}
		}
		
		public System.Data.Linq.Table<Family> Families
		{
			get
			{
				return this.GetTable<Family>();
			}
		}
		
		public System.Data.Linq.Table<Education> Educations
		{
			get
			{
				return this.GetTable<Education>();
			}
		}
		
		public System.Data.Linq.Table<Contract> Contracts
		{
			get
			{
				return this.GetTable<Contract>();
			}
		}
		
		public System.Data.Linq.Table<Address> Addresses
		{
			get
			{
				return this.GetTable<Address>();
			}
		}
		
		public System.Data.Linq.Table<Military> Militaries
		{
			get
			{
				return this.GetTable<Military>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Workers")]
	public partial class Worker : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Surname;
		
		private string _Name;
		
		private string _MiddleName;
		
		private System.Nullable<System.DateTime> _BirthDate;
		
		private System.Nullable<char> _Gender;
		
		private string _FamilyStatus;
		
		private System.Nullable<int> _PositionID;
		
		private System.Nullable<int> _DepartmentID;
		
		private System.Nullable<int> _EducationID;
		
		private EntitySet<Family> _Families;
		
		private EntityRef<PassportData> _PassportData;
		
		private EntityRef<Education> _Education;
		
		private EntityRef<Contract> _Contract;
		
		private EntityRef<Address> _Address;
		
		private EntityRef<Military> _Military;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSurnameChanging(string value);
    partial void OnSurnameChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnMiddleNameChanging(string value);
    partial void OnMiddleNameChanged();
    partial void OnBirthDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthDateChanged();
    partial void OnGenderChanging(System.Nullable<char> value);
    partial void OnGenderChanged();
    partial void OnFamilyStatusChanging(string value);
    partial void OnFamilyStatusChanged();
    partial void OnPositionIDChanging(System.Nullable<int> value);
    partial void OnPositionIDChanged();
    partial void OnDepartmentIDChanging(System.Nullable<int> value);
    partial void OnDepartmentIDChanged();
    partial void OnEducationIDChanging(System.Nullable<int> value);
    partial void OnEducationIDChanged();
    #endregion
		
		public Worker()
		{
			this._Families = new EntitySet<Family>(new Action<Family>(this.attach_Families), new Action<Family>(this.detach_Families));
			this._PassportData = default(EntityRef<PassportData>);
			this._Education = default(EntityRef<Education>);
			this._Contract = default(EntityRef<Contract>);
			this._Address = default(EntityRef<Address>);
			this._Military = default(EntityRef<Military>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if ((((this._PassportData.HasLoadedOrAssignedValue || this._Contract.HasLoadedOrAssignedValue) 
								|| this._Address.HasLoadedOrAssignedValue) 
								|| this._Military.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surname", DbType="NVarChar(60)")]
		public string Surname
		{
			get
			{
				return this._Surname;
			}
			set
			{
				if ((this._Surname != value))
				{
					this.OnSurnameChanging(value);
					this.SendPropertyChanging();
					this._Surname = value;
					this.SendPropertyChanged("Surname");
					this.OnSurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(60)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleName", DbType="NVarChar(60)")]
		public string MiddleName
		{
			get
			{
				return this._MiddleName;
			}
			set
			{
				if ((this._MiddleName != value))
				{
					this.OnMiddleNameChanging(value);
					this.SendPropertyChanging();
					this._MiddleName = value;
					this.SendPropertyChanged("MiddleName");
					this.OnMiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="Date")]
		public System.Nullable<System.DateTime> BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this.OnBirthDateChanging(value);
					this.SendPropertyChanging();
					this._BirthDate = value;
					this.SendPropertyChanged("BirthDate");
					this.OnBirthDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="NChar(1)")]
		public System.Nullable<char> Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamilyStatus", DbType="NVarChar(35)")]
		public string FamilyStatus
		{
			get
			{
				return this._FamilyStatus;
			}
			set
			{
				if ((this._FamilyStatus != value))
				{
					this.OnFamilyStatusChanging(value);
					this.SendPropertyChanging();
					this._FamilyStatus = value;
					this.SendPropertyChanged("FamilyStatus");
					this.OnFamilyStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionID", DbType="Int")]
		public System.Nullable<int> PositionID
		{
			get
			{
				return this._PositionID;
			}
			set
			{
				if ((this._PositionID != value))
				{
					this.OnPositionIDChanging(value);
					this.SendPropertyChanging();
					this._PositionID = value;
					this.SendPropertyChanged("PositionID");
					this.OnPositionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentID", DbType="Int")]
		public System.Nullable<int> DepartmentID
		{
			get
			{
				return this._DepartmentID;
			}
			set
			{
				if ((this._DepartmentID != value))
				{
					this.OnDepartmentIDChanging(value);
					this.SendPropertyChanging();
					this._DepartmentID = value;
					this.SendPropertyChanged("DepartmentID");
					this.OnDepartmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationID", DbType="Int")]
		public System.Nullable<int> EducationID
		{
			get
			{
				return this._EducationID;
			}
			set
			{
				if ((this._EducationID != value))
				{
					if (this._Education.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEducationIDChanging(value);
					this.SendPropertyChanging();
					this._EducationID = value;
					this.SendPropertyChanged("EducationID");
					this.OnEducationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Worker_Family", Storage="_Families", ThisKey="ID", OtherKey="WorkerID")]
		public EntitySet<Family> Families
		{
			get
			{
				return this._Families;
			}
			set
			{
				this._Families.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PassportData_Worker", Storage="_PassportData", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public PassportData PassportData
		{
			get
			{
				return this._PassportData.Entity;
			}
			set
			{
				PassportData previousValue = this._PassportData.Entity;
				if (((previousValue != value) 
							|| (this._PassportData.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PassportData.Entity = null;
						previousValue.Worker = null;
					}
					this._PassportData.Entity = value;
					if ((value != null))
					{
						value.Worker = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(int);
					}
					this.SendPropertyChanged("PassportData");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Education_Worker", Storage="_Education", ThisKey="EducationID", OtherKey="EducationID", IsForeignKey=true)]
		public Education Education
		{
			get
			{
				return this._Education.Entity;
			}
			set
			{
				Education previousValue = this._Education.Entity;
				if (((previousValue != value) 
							|| (this._Education.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Education.Entity = null;
						previousValue.Workers.Remove(this);
					}
					this._Education.Entity = value;
					if ((value != null))
					{
						value.Workers.Add(this);
						this._EducationID = value.EducationID;
					}
					else
					{
						this._EducationID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Education");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contract_Worker", Storage="_Contract", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public Contract Contract
		{
			get
			{
				return this._Contract.Entity;
			}
			set
			{
				Contract previousValue = this._Contract.Entity;
				if (((previousValue != value) 
							|| (this._Contract.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contract.Entity = null;
						previousValue.Worker = null;
					}
					this._Contract.Entity = value;
					if ((value != null))
					{
						value.Worker = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(int);
					}
					this.SendPropertyChanged("Contract");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_Worker", Storage="_Address", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public Address Address
		{
			get
			{
				return this._Address.Entity;
			}
			set
			{
				Address previousValue = this._Address.Entity;
				if (((previousValue != value) 
							|| (this._Address.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Address.Entity = null;
						previousValue.Worker = null;
					}
					this._Address.Entity = value;
					if ((value != null))
					{
						value.Worker = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(int);
					}
					this.SendPropertyChanged("Address");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Military_Worker", Storage="_Military", ThisKey="ID", OtherKey="WorkerID", IsForeignKey=true)]
		public Military Military
		{
			get
			{
				return this._Military.Entity;
			}
			set
			{
				Military previousValue = this._Military.Entity;
				if (((previousValue != value) 
							|| (this._Military.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Military.Entity = null;
						previousValue.Worker = null;
					}
					this._Military.Entity = value;
					if ((value != null))
					{
						value.Worker = this;
						this._ID = value.WorkerID;
					}
					else
					{
						this._ID = default(int);
					}
					this.SendPropertyChanged("Military");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Families(Family entity)
		{
			this.SendPropertyChanging();
			entity.Worker = this;
		}
		
		private void detach_Families(Family entity)
		{
			this.SendPropertyChanging();
			entity.Worker = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PostGraduate")]
	public partial class PostGraduate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PostGraduateID;
		
		private string _PostGraduateInstitution;
		
		private System.Nullable<int> _GraduationYear;
		
		private string _Profession;
		
		private string _EducationForm;
		
		private EntitySet<Education> _Educations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPostGraduateIDChanging(int value);
    partial void OnPostGraduateIDChanged();
    partial void OnPostGraduateInstitutionChanging(string value);
    partial void OnPostGraduateInstitutionChanged();
    partial void OnGraduationYearChanging(System.Nullable<int> value);
    partial void OnGraduationYearChanged();
    partial void OnProfessionChanging(string value);
    partial void OnProfessionChanged();
    partial void OnEducationFormChanging(string value);
    partial void OnEducationFormChanged();
    #endregion
		
		public PostGraduate()
		{
			this._Educations = new EntitySet<Education>(new Action<Education>(this.attach_Educations), new Action<Education>(this.detach_Educations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostGraduateID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PostGraduateID
		{
			get
			{
				return this._PostGraduateID;
			}
			set
			{
				if ((this._PostGraduateID != value))
				{
					this.OnPostGraduateIDChanging(value);
					this.SendPropertyChanging();
					this._PostGraduateID = value;
					this.SendPropertyChanged("PostGraduateID");
					this.OnPostGraduateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostGraduateInstitution", DbType="NVarChar(70)")]
		public string PostGraduateInstitution
		{
			get
			{
				return this._PostGraduateInstitution;
			}
			set
			{
				if ((this._PostGraduateInstitution != value))
				{
					this.OnPostGraduateInstitutionChanging(value);
					this.SendPropertyChanging();
					this._PostGraduateInstitution = value;
					this.SendPropertyChanged("PostGraduateInstitution");
					this.OnPostGraduateInstitutionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GraduationYear", DbType="Int")]
		public System.Nullable<int> GraduationYear
		{
			get
			{
				return this._GraduationYear;
			}
			set
			{
				if ((this._GraduationYear != value))
				{
					this.OnGraduationYearChanging(value);
					this.SendPropertyChanging();
					this._GraduationYear = value;
					this.SendPropertyChanged("GraduationYear");
					this.OnGraduationYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Profession", DbType="NVarChar(50)")]
		public string Profession
		{
			get
			{
				return this._Profession;
			}
			set
			{
				if ((this._Profession != value))
				{
					this.OnProfessionChanging(value);
					this.SendPropertyChanging();
					this._Profession = value;
					this.SendPropertyChanged("Profession");
					this.OnProfessionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationForm", DbType="NVarChar(20)")]
		public string EducationForm
		{
			get
			{
				return this._EducationForm;
			}
			set
			{
				if ((this._EducationForm != value))
				{
					this.OnEducationFormChanging(value);
					this.SendPropertyChanging();
					this._EducationForm = value;
					this.SendPropertyChanged("EducationForm");
					this.OnEducationFormChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PostGraduate_Education", Storage="_Educations", ThisKey="PostGraduateID", OtherKey="PostGraduateID")]
		public EntitySet<Education> Educations
		{
			get
			{
				return this._Educations;
			}
			set
			{
				this._Educations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Educations(Education entity)
		{
			this.SendPropertyChanging();
			entity.PostGraduate = this;
		}
		
		private void detach_Educations(Education entity)
		{
			this.SendPropertyChanging();
			entity.PostGraduate = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PassportData")]
	public partial class PassportData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TaxID;
		
		private string _Passport;
		
		private System.Nullable<System.DateTime> _PassportIssueDate;
		
		private string _Citizenship;
		
		private string _Insurance;
		
		private string _ForeignPassport;
		
		private System.Nullable<System.DateTime> _ForeignExpiry;
		
		private EntityRef<Worker> _Worker;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTaxIDChanging(string value);
    partial void OnTaxIDChanged();
    partial void OnPassportChanging(string value);
    partial void OnPassportChanged();
    partial void OnPassportIssueDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPassportIssueDateChanged();
    partial void OnCitizenshipChanging(string value);
    partial void OnCitizenshipChanged();
    partial void OnInsuranceChanging(string value);
    partial void OnInsuranceChanged();
    partial void OnForeignPassportChanging(string value);
    partial void OnForeignPassportChanged();
    partial void OnForeignExpiryChanging(System.Nullable<System.DateTime> value);
    partial void OnForeignExpiryChanged();
    #endregion
		
		public PassportData()
		{
			this._Worker = default(EntityRef<Worker>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxID", DbType="NVarChar(10)")]
		public string TaxID
		{
			get
			{
				return this._TaxID;
			}
			set
			{
				if ((this._TaxID != value))
				{
					this.OnTaxIDChanging(value);
					this.SendPropertyChanging();
					this._TaxID = value;
					this.SendPropertyChanged("TaxID");
					this.OnTaxIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Passport", DbType="NVarChar(8)")]
		public string Passport
		{
			get
			{
				return this._Passport;
			}
			set
			{
				if ((this._Passport != value))
				{
					this.OnPassportChanging(value);
					this.SendPropertyChanging();
					this._Passport = value;
					this.SendPropertyChanged("Passport");
					this.OnPassportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassportIssueDate", DbType="Date")]
		public System.Nullable<System.DateTime> PassportIssueDate
		{
			get
			{
				return this._PassportIssueDate;
			}
			set
			{
				if ((this._PassportIssueDate != value))
				{
					this.OnPassportIssueDateChanging(value);
					this.SendPropertyChanging();
					this._PassportIssueDate = value;
					this.SendPropertyChanged("PassportIssueDate");
					this.OnPassportIssueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Citizenship", DbType="NVarChar(50)")]
		public string Citizenship
		{
			get
			{
				return this._Citizenship;
			}
			set
			{
				if ((this._Citizenship != value))
				{
					this.OnCitizenshipChanging(value);
					this.SendPropertyChanging();
					this._Citizenship = value;
					this.SendPropertyChanged("Citizenship");
					this.OnCitizenshipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Insurance", DbType="NVarChar(10)")]
		public string Insurance
		{
			get
			{
				return this._Insurance;
			}
			set
			{
				if ((this._Insurance != value))
				{
					this.OnInsuranceChanging(value);
					this.SendPropertyChanging();
					this._Insurance = value;
					this.SendPropertyChanged("Insurance");
					this.OnInsuranceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForeignPassport", DbType="NVarChar(8)")]
		public string ForeignPassport
		{
			get
			{
				return this._ForeignPassport;
			}
			set
			{
				if ((this._ForeignPassport != value))
				{
					this.OnForeignPassportChanging(value);
					this.SendPropertyChanging();
					this._ForeignPassport = value;
					this.SendPropertyChanged("ForeignPassport");
					this.OnForeignPassportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForeignExpiry", DbType="Date")]
		public System.Nullable<System.DateTime> ForeignExpiry
		{
			get
			{
				return this._ForeignExpiry;
			}
			set
			{
				if ((this._ForeignExpiry != value))
				{
					this.OnForeignExpiryChanging(value);
					this.SendPropertyChanging();
					this._ForeignExpiry = value;
					this.SendPropertyChanged("ForeignExpiry");
					this.OnForeignExpiryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PassportData_Worker", Storage="_Worker", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public Worker Worker
		{
			get
			{
				return this._Worker.Entity;
			}
			set
			{
				Worker previousValue = this._Worker.Entity;
				if (((previousValue != value) 
							|| (this._Worker.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Worker.Entity = null;
						previousValue.PassportData = null;
					}
					this._Worker.Entity = value;
					if ((value != null))
					{
						value.PassportData = this;
					}
					this.SendPropertyChanged("Worker");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Family")]
	public partial class Family : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _WorkerID;
		
		private int _MemberID;
		
		private string _Relation;
		
		private string _Surname;
		
		private string _Name;
		
		private string _MiddleName;
		
		private System.Nullable<System.DateTime> _BirthDate;
		
		private System.Nullable<char> _Gender;
		
		private EntityRef<Worker> _Worker;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWorkerIDChanging(System.Nullable<int> value);
    partial void OnWorkerIDChanged();
    partial void OnMemberIDChanging(int value);
    partial void OnMemberIDChanged();
    partial void OnRelationChanging(string value);
    partial void OnRelationChanged();
    partial void OnSurnameChanging(string value);
    partial void OnSurnameChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnMiddleNameChanging(string value);
    partial void OnMiddleNameChanged();
    partial void OnBirthDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthDateChanged();
    partial void OnGenderChanging(System.Nullable<char> value);
    partial void OnGenderChanged();
    #endregion
		
		public Family()
		{
			this._Worker = default(EntityRef<Worker>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkerID", DbType="Int")]
		public System.Nullable<int> WorkerID
		{
			get
			{
				return this._WorkerID;
			}
			set
			{
				if ((this._WorkerID != value))
				{
					if (this._Worker.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkerIDChanging(value);
					this.SendPropertyChanging();
					this._WorkerID = value;
					this.SendPropertyChanged("WorkerID");
					this.OnWorkerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MemberID
		{
			get
			{
				return this._MemberID;
			}
			set
			{
				if ((this._MemberID != value))
				{
					this.OnMemberIDChanging(value);
					this.SendPropertyChanging();
					this._MemberID = value;
					this.SendPropertyChanged("MemberID");
					this.OnMemberIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Relation", DbType="NVarChar(30)")]
		public string Relation
		{
			get
			{
				return this._Relation;
			}
			set
			{
				if ((this._Relation != value))
				{
					this.OnRelationChanging(value);
					this.SendPropertyChanging();
					this._Relation = value;
					this.SendPropertyChanged("Relation");
					this.OnRelationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surname", DbType="NVarChar(60)")]
		public string Surname
		{
			get
			{
				return this._Surname;
			}
			set
			{
				if ((this._Surname != value))
				{
					this.OnSurnameChanging(value);
					this.SendPropertyChanging();
					this._Surname = value;
					this.SendPropertyChanged("Surname");
					this.OnSurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(60)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleName", DbType="NVarChar(60)")]
		public string MiddleName
		{
			get
			{
				return this._MiddleName;
			}
			set
			{
				if ((this._MiddleName != value))
				{
					this.OnMiddleNameChanging(value);
					this.SendPropertyChanging();
					this._MiddleName = value;
					this.SendPropertyChanged("MiddleName");
					this.OnMiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="Date")]
		public System.Nullable<System.DateTime> BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this.OnBirthDateChanging(value);
					this.SendPropertyChanging();
					this._BirthDate = value;
					this.SendPropertyChanged("BirthDate");
					this.OnBirthDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="NChar(1)")]
		public System.Nullable<char> Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Worker_Family", Storage="_Worker", ThisKey="WorkerID", OtherKey="ID", IsForeignKey=true)]
		public Worker Worker
		{
			get
			{
				return this._Worker.Entity;
			}
			set
			{
				Worker previousValue = this._Worker.Entity;
				if (((previousValue != value) 
							|| (this._Worker.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Worker.Entity = null;
						previousValue.Families.Remove(this);
					}
					this._Worker.Entity = value;
					if ((value != null))
					{
						value.Families.Add(this);
						this._WorkerID = value.ID;
					}
					else
					{
						this._WorkerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Worker");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Education")]
	public partial class Education : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EducationID;
		
		private string _Institution;
		
		private System.Nullable<int> _GraduationYear;
		
		private string _Profession;
		
		private string _EducationForm;
		
		private System.Nullable<int> _PostGraduateID;
		
		private EntitySet<Worker> _Workers;
		
		private EntityRef<PostGraduate> _PostGraduate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEducationIDChanging(int value);
    partial void OnEducationIDChanged();
    partial void OnInstitutionChanging(string value);
    partial void OnInstitutionChanged();
    partial void OnGraduationYearChanging(System.Nullable<int> value);
    partial void OnGraduationYearChanged();
    partial void OnProfessionChanging(string value);
    partial void OnProfessionChanged();
    partial void OnEducationFormChanging(string value);
    partial void OnEducationFormChanged();
    partial void OnPostGraduateIDChanging(System.Nullable<int> value);
    partial void OnPostGraduateIDChanged();
    #endregion
		
		public Education()
		{
			this._Workers = new EntitySet<Worker>(new Action<Worker>(this.attach_Workers), new Action<Worker>(this.detach_Workers));
			this._PostGraduate = default(EntityRef<PostGraduate>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int EducationID
		{
			get
			{
				return this._EducationID;
			}
			set
			{
				if ((this._EducationID != value))
				{
					this.OnEducationIDChanging(value);
					this.SendPropertyChanging();
					this._EducationID = value;
					this.SendPropertyChanged("EducationID");
					this.OnEducationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Institution", DbType="NVarChar(70)")]
		public string Institution
		{
			get
			{
				return this._Institution;
			}
			set
			{
				if ((this._Institution != value))
				{
					this.OnInstitutionChanging(value);
					this.SendPropertyChanging();
					this._Institution = value;
					this.SendPropertyChanged("Institution");
					this.OnInstitutionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GraduationYear", DbType="Int")]
		public System.Nullable<int> GraduationYear
		{
			get
			{
				return this._GraduationYear;
			}
			set
			{
				if ((this._GraduationYear != value))
				{
					this.OnGraduationYearChanging(value);
					this.SendPropertyChanging();
					this._GraduationYear = value;
					this.SendPropertyChanged("GraduationYear");
					this.OnGraduationYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Profession", DbType="NVarChar(70)")]
		public string Profession
		{
			get
			{
				return this._Profession;
			}
			set
			{
				if ((this._Profession != value))
				{
					this.OnProfessionChanging(value);
					this.SendPropertyChanging();
					this._Profession = value;
					this.SendPropertyChanged("Profession");
					this.OnProfessionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationForm", DbType="NVarChar(20)")]
		public string EducationForm
		{
			get
			{
				return this._EducationForm;
			}
			set
			{
				if ((this._EducationForm != value))
				{
					this.OnEducationFormChanging(value);
					this.SendPropertyChanging();
					this._EducationForm = value;
					this.SendPropertyChanged("EducationForm");
					this.OnEducationFormChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostGraduateID", DbType="Int")]
		public System.Nullable<int> PostGraduateID
		{
			get
			{
				return this._PostGraduateID;
			}
			set
			{
				if ((this._PostGraduateID != value))
				{
					if (this._PostGraduate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPostGraduateIDChanging(value);
					this.SendPropertyChanging();
					this._PostGraduateID = value;
					this.SendPropertyChanged("PostGraduateID");
					this.OnPostGraduateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Education_Worker", Storage="_Workers", ThisKey="EducationID", OtherKey="EducationID")]
		public EntitySet<Worker> Workers
		{
			get
			{
				return this._Workers;
			}
			set
			{
				this._Workers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PostGraduate_Education", Storage="_PostGraduate", ThisKey="PostGraduateID", OtherKey="PostGraduateID", IsForeignKey=true)]
		public PostGraduate PostGraduate
		{
			get
			{
				return this._PostGraduate.Entity;
			}
			set
			{
				PostGraduate previousValue = this._PostGraduate.Entity;
				if (((previousValue != value) 
							|| (this._PostGraduate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PostGraduate.Entity = null;
						previousValue.Educations.Remove(this);
					}
					this._PostGraduate.Entity = value;
					if ((value != null))
					{
						value.Educations.Add(this);
						this._PostGraduateID = value.PostGraduateID;
					}
					else
					{
						this._PostGraduateID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PostGraduate");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Workers(Worker entity)
		{
			this.SendPropertyChanging();
			entity.Education = this;
		}
		
		private void detach_Workers(Worker entity)
		{
			this.SendPropertyChanging();
			entity.Education = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Contract")]
	public partial class Contract : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.DateTime> _HiringDate;
		
		private System.Nullable<System.DateTime> _DismissDate;
		
		private System.Nullable<System.DateTime> _Probation;
		
		private EntityRef<Worker> _Worker;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnHiringDateChanging(System.Nullable<System.DateTime> value);
    partial void OnHiringDateChanged();
    partial void OnDismissDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDismissDateChanged();
    partial void OnProbationChanging(System.Nullable<System.DateTime> value);
    partial void OnProbationChanged();
    #endregion
		
		public Contract()
		{
			this._Worker = default(EntityRef<Worker>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HiringDate", DbType="Date")]
		public System.Nullable<System.DateTime> HiringDate
		{
			get
			{
				return this._HiringDate;
			}
			set
			{
				if ((this._HiringDate != value))
				{
					this.OnHiringDateChanging(value);
					this.SendPropertyChanging();
					this._HiringDate = value;
					this.SendPropertyChanged("HiringDate");
					this.OnHiringDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DismissDate", DbType="Date")]
		public System.Nullable<System.DateTime> DismissDate
		{
			get
			{
				return this._DismissDate;
			}
			set
			{
				if ((this._DismissDate != value))
				{
					this.OnDismissDateChanging(value);
					this.SendPropertyChanging();
					this._DismissDate = value;
					this.SendPropertyChanged("DismissDate");
					this.OnDismissDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Probation", DbType="Date")]
		public System.Nullable<System.DateTime> Probation
		{
			get
			{
				return this._Probation;
			}
			set
			{
				if ((this._Probation != value))
				{
					this.OnProbationChanging(value);
					this.SendPropertyChanging();
					this._Probation = value;
					this.SendPropertyChanged("Probation");
					this.OnProbationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contract_Worker", Storage="_Worker", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public Worker Worker
		{
			get
			{
				return this._Worker.Entity;
			}
			set
			{
				Worker previousValue = this._Worker.Entity;
				if (((previousValue != value) 
							|| (this._Worker.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Worker.Entity = null;
						previousValue.Contract = null;
					}
					this._Worker.Entity = value;
					if ((value != null))
					{
						value.Contract = this;
					}
					this.SendPropertyChanged("Worker");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Addresses")]
	public partial class Address : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ZipCode;
		
		private string _Region;
		
		private string _Town;
		
		private string _Street;
		
		private string _House;
		
		private string _Birthplace;
		
		private string _HomePhone;
		
		private string _MobileNumber;
		
		private string _WorkPhone;
		
		private string _Email;
		
		private EntityRef<Worker> _Worker;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnZipCodeChanging(System.Nullable<int> value);
    partial void OnZipCodeChanged();
    partial void OnRegionChanging(string value);
    partial void OnRegionChanged();
    partial void OnTownChanging(string value);
    partial void OnTownChanged();
    partial void OnStreetChanging(string value);
    partial void OnStreetChanged();
    partial void OnHouseChanging(string value);
    partial void OnHouseChanged();
    partial void OnBirthplaceChanging(string value);
    partial void OnBirthplaceChanged();
    partial void OnHomePhoneChanging(string value);
    partial void OnHomePhoneChanged();
    partial void OnMobileNumberChanging(string value);
    partial void OnMobileNumberChanged();
    partial void OnWorkPhoneChanging(string value);
    partial void OnWorkPhoneChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public Address()
		{
			this._Worker = default(EntityRef<Worker>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZipCode", DbType="Int")]
		public System.Nullable<int> ZipCode
		{
			get
			{
				return this._ZipCode;
			}
			set
			{
				if ((this._ZipCode != value))
				{
					this.OnZipCodeChanging(value);
					this.SendPropertyChanging();
					this._ZipCode = value;
					this.SendPropertyChanged("ZipCode");
					this.OnZipCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Region", DbType="NVarChar(35)")]
		public string Region
		{
			get
			{
				return this._Region;
			}
			set
			{
				if ((this._Region != value))
				{
					this.OnRegionChanging(value);
					this.SendPropertyChanging();
					this._Region = value;
					this.SendPropertyChanged("Region");
					this.OnRegionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Town", DbType="NVarChar(40)")]
		public string Town
		{
			get
			{
				return this._Town;
			}
			set
			{
				if ((this._Town != value))
				{
					this.OnTownChanging(value);
					this.SendPropertyChanging();
					this._Town = value;
					this.SendPropertyChanged("Town");
					this.OnTownChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Street", DbType="NVarChar(40)")]
		public string Street
		{
			get
			{
				return this._Street;
			}
			set
			{
				if ((this._Street != value))
				{
					this.OnStreetChanging(value);
					this.SendPropertyChanging();
					this._Street = value;
					this.SendPropertyChanged("Street");
					this.OnStreetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_House", DbType="NVarChar(7)")]
		public string House
		{
			get
			{
				return this._House;
			}
			set
			{
				if ((this._House != value))
				{
					this.OnHouseChanging(value);
					this.SendPropertyChanging();
					this._House = value;
					this.SendPropertyChanged("House");
					this.OnHouseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birthplace", DbType="NVarChar(40)")]
		public string Birthplace
		{
			get
			{
				return this._Birthplace;
			}
			set
			{
				if ((this._Birthplace != value))
				{
					this.OnBirthplaceChanging(value);
					this.SendPropertyChanging();
					this._Birthplace = value;
					this.SendPropertyChanged("Birthplace");
					this.OnBirthplaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomePhone", DbType="NVarChar(25)")]
		public string HomePhone
		{
			get
			{
				return this._HomePhone;
			}
			set
			{
				if ((this._HomePhone != value))
				{
					this.OnHomePhoneChanging(value);
					this.SendPropertyChanging();
					this._HomePhone = value;
					this.SendPropertyChanged("HomePhone");
					this.OnHomePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNumber", DbType="NVarChar(18)")]
		public string MobileNumber
		{
			get
			{
				return this._MobileNumber;
			}
			set
			{
				if ((this._MobileNumber != value))
				{
					this.OnMobileNumberChanging(value);
					this.SendPropertyChanging();
					this._MobileNumber = value;
					this.SendPropertyChanged("MobileNumber");
					this.OnMobileNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPhone", DbType="NVarChar(25)")]
		public string WorkPhone
		{
			get
			{
				return this._WorkPhone;
			}
			set
			{
				if ((this._WorkPhone != value))
				{
					this.OnWorkPhoneChanging(value);
					this.SendPropertyChanging();
					this._WorkPhone = value;
					this.SendPropertyChanged("WorkPhone");
					this.OnWorkPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(60)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_Worker", Storage="_Worker", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public Worker Worker
		{
			get
			{
				return this._Worker.Entity;
			}
			set
			{
				Worker previousValue = this._Worker.Entity;
				if (((previousValue != value) 
							|| (this._Worker.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Worker.Entity = null;
						previousValue.Address = null;
					}
					this._Worker.Entity = value;
					if ((value != null))
					{
						value.Address = this;
					}
					this.SendPropertyChanged("Worker");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Military")]
	public partial class Military : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MilitaryID;
		
		private int _WorkerID;
		
		private string _AccountingGroup;
		
		private string _MilitaryStructure;
		
		private System.Nullable<int> _NumberSpecialties;
		
		private string _MilitaryRank;
		
		private string _Suitability;
		
		private System.Nullable<bool> _Ismobilized;
		
		private System.Nullable<System.DateTime> _DateOfMobilization;
		
		private string _NameOfMilitary;
		
		private string _reservations;
		
		private EntityRef<Worker> _Worker;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMilitaryIDChanging(int value);
    partial void OnMilitaryIDChanged();
    partial void OnWorkerIDChanging(int value);
    partial void OnWorkerIDChanged();
    partial void OnAccountingGroupChanging(string value);
    partial void OnAccountingGroupChanged();
    partial void OnMilitaryStructureChanging(string value);
    partial void OnMilitaryStructureChanged();
    partial void OnNumberSpecialtiesChanging(System.Nullable<int> value);
    partial void OnNumberSpecialtiesChanged();
    partial void OnMilitaryRankChanging(string value);
    partial void OnMilitaryRankChanged();
    partial void OnSuitabilityChanging(string value);
    partial void OnSuitabilityChanged();
    partial void OnIsmobilizedChanging(System.Nullable<bool> value);
    partial void OnIsmobilizedChanged();
    partial void OnDateOfMobilizationChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOfMobilizationChanged();
    partial void OnNameOfMilitaryChanging(string value);
    partial void OnNameOfMilitaryChanged();
    partial void OnreservationsChanging(string value);
    partial void OnreservationsChanged();
    #endregion
		
		public Military()
		{
			this._Worker = default(EntityRef<Worker>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MilitaryID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int MilitaryID
		{
			get
			{
				return this._MilitaryID;
			}
			set
			{
				if ((this._MilitaryID != value))
				{
					this.OnMilitaryIDChanging(value);
					this.SendPropertyChanging();
					this._MilitaryID = value;
					this.SendPropertyChanged("MilitaryID");
					this.OnMilitaryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkerID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int WorkerID
		{
			get
			{
				return this._WorkerID;
			}
			set
			{
				if ((this._WorkerID != value))
				{
					this.OnWorkerIDChanging(value);
					this.SendPropertyChanging();
					this._WorkerID = value;
					this.SendPropertyChanged("WorkerID");
					this.OnWorkerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountingGroup", DbType="NVarChar(35)")]
		public string AccountingGroup
		{
			get
			{
				return this._AccountingGroup;
			}
			set
			{
				if ((this._AccountingGroup != value))
				{
					this.OnAccountingGroupChanging(value);
					this.SendPropertyChanging();
					this._AccountingGroup = value;
					this.SendPropertyChanged("AccountingGroup");
					this.OnAccountingGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MilitaryStructure", DbType="NVarChar(50)")]
		public string MilitaryStructure
		{
			get
			{
				return this._MilitaryStructure;
			}
			set
			{
				if ((this._MilitaryStructure != value))
				{
					this.OnMilitaryStructureChanging(value);
					this.SendPropertyChanging();
					this._MilitaryStructure = value;
					this.SendPropertyChanged("MilitaryStructure");
					this.OnMilitaryStructureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberSpecialties", DbType="Int")]
		public System.Nullable<int> NumberSpecialties
		{
			get
			{
				return this._NumberSpecialties;
			}
			set
			{
				if ((this._NumberSpecialties != value))
				{
					this.OnNumberSpecialtiesChanging(value);
					this.SendPropertyChanging();
					this._NumberSpecialties = value;
					this.SendPropertyChanged("NumberSpecialties");
					this.OnNumberSpecialtiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MilitaryRank", DbType="NVarChar(50)")]
		public string MilitaryRank
		{
			get
			{
				return this._MilitaryRank;
			}
			set
			{
				if ((this._MilitaryRank != value))
				{
					this.OnMilitaryRankChanging(value);
					this.SendPropertyChanging();
					this._MilitaryRank = value;
					this.SendPropertyChanged("MilitaryRank");
					this.OnMilitaryRankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Suitability", DbType="NVarChar(60)")]
		public string Suitability
		{
			get
			{
				return this._Suitability;
			}
			set
			{
				if ((this._Suitability != value))
				{
					this.OnSuitabilityChanging(value);
					this.SendPropertyChanging();
					this._Suitability = value;
					this.SendPropertyChanged("Suitability");
					this.OnSuitabilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ismobilized", DbType="Bit")]
		public System.Nullable<bool> Ismobilized
		{
			get
			{
				return this._Ismobilized;
			}
			set
			{
				if ((this._Ismobilized != value))
				{
					this.OnIsmobilizedChanging(value);
					this.SendPropertyChanging();
					this._Ismobilized = value;
					this.SendPropertyChanged("Ismobilized");
					this.OnIsmobilizedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfMobilization", DbType="Date")]
		public System.Nullable<System.DateTime> DateOfMobilization
		{
			get
			{
				return this._DateOfMobilization;
			}
			set
			{
				if ((this._DateOfMobilization != value))
				{
					this.OnDateOfMobilizationChanging(value);
					this.SendPropertyChanging();
					this._DateOfMobilization = value;
					this.SendPropertyChanged("DateOfMobilization");
					this.OnDateOfMobilizationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameOfMilitary", DbType="NVarChar(150)")]
		public string NameOfMilitary
		{
			get
			{
				return this._NameOfMilitary;
			}
			set
			{
				if ((this._NameOfMilitary != value))
				{
					this.OnNameOfMilitaryChanging(value);
					this.SendPropertyChanging();
					this._NameOfMilitary = value;
					this.SendPropertyChanged("NameOfMilitary");
					this.OnNameOfMilitaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reservations", DbType="NVarChar(50)")]
		public string reservations
		{
			get
			{
				return this._reservations;
			}
			set
			{
				if ((this._reservations != value))
				{
					this.OnreservationsChanging(value);
					this.SendPropertyChanging();
					this._reservations = value;
					this.SendPropertyChanged("reservations");
					this.OnreservationsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Military_Worker", Storage="_Worker", ThisKey="WorkerID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public Worker Worker
		{
			get
			{
				return this._Worker.Entity;
			}
			set
			{
				Worker previousValue = this._Worker.Entity;
				if (((previousValue != value) 
							|| (this._Worker.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Worker.Entity = null;
						previousValue.Military = null;
					}
					this._Worker.Entity = value;
					if ((value != null))
					{
						value.Military = this;
					}
					this.SendPropertyChanged("Worker");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
