using System;
using System.ComponentModel;
using System.Configuration;
using System.Data;
using System.Data.SqlClient;
using System.IO;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Media;
using Microsoft.Win32;
using Telerik.Windows.Controls.Charting;

namespace HrDepartment
{
    /// <summary>
    /// Interaction logic for StatisticsWindow.xaml
    /// </summary>
    public partial class StatisticsWindow : Window
    {
        //Конфігурація з'єднання з базою даних
        string connectionString =
            ConfigurationManager.ConnectionStrings["Personnel_departmentConnectionString"].ConnectionString;

        private readonly ClearElements _clearElements;
        public StatisticsWindow()
        {
            InitializeComponent();
            _clearElements = new ClearElements();
        }

        //Сформувати статистику
        private void CreateButton_Click(object sender, RoutedEventArgs e)
        {
            using (SqlConnection con = new SqlConnection(connectionString))
            {
                //Обрати критерію з ComboBox
                ComboBoxItem comboItem = (ComboBoxItem) CriteriaComboBox.SelectedItem;
                string criterianame = comboItem.Name;

                //Обрати місяць
                ComboBoxItem comboItem2 = (ComboBoxItem) MonthComboBox.SelectedItem;
                string monthname = comboItem2.Name;

                //Запит для виводу інформації про діяльність
                string query = String.Format("SELECT wk.Surname , act.{0} " +
                                             "FROM Workers wk " +
                                             "INNER JOIN Activity act on wk.ID=act.WorkerID " +
                                             "WHERE act.CalendarMonthName = '{1}' AND act.CalendarYear = {2} ",
                    criterianame, monthname, NumericUpDown.Value);

                con.Open();
                SqlDataAdapter dataAdapter = new SqlDataAdapter(query, connectionString);
                DataTable table = new DataTable();
                dataAdapter.Fill(table);
                Chart.ItemsSource = table;
                
                //Заговолок графіку відповідно до обраних параметрів
                Chart.DefaultView.ChartTitle.Content = "Статистика: " + comboItem.Content.ToString().ToLowerInvariant() +" за " + monthname.ToLowerInvariant() + " " + NumericUpDown.Value + " року";
                //Автоматично генерувати легенду
                Chart.DefaultView.ChartLegend.UseAutoGeneratedItems = false;
                
                //Назва осей X та Y
                Chart.DefaultView.ChartArea.AxisX.Title = "Працівник (табельний номер)";
                Chart.DefaultView.ChartArea.AxisY.Title = "Кількість днів";

                Chart.DefaultView.ChartLegend.UseAutoGeneratedItems = true;

                //Назва легенди
                ChartLegendItem item1 = new ChartLegendItem();
                item1.Label = "Дні";
                item1.MarkerFill = new SolidColorBrush(Colors.DarkTurquoise);
                Chart.DefaultView.ChartLegend.Items.Add(item1);
                //Форма значка легенди
                Chart.DefaultView.ChartLegend.LegendItemMarkerShape = MarkerShape.Circle;

                //показати лінії сітки
                //для присутності
                if (comboItem.Name.ToString() == "Present")
                {
                    //позитивне значення
                    CustomGridLine gridlinePositive = new CustomGridLine();
                    gridlinePositive.YIntercept = 20;
                    gridlinePositive.Stroke = new SolidColorBrush(Colors.Chartreuse);
                    gridlinePositive.StrokeThickness = 2;
                    this.Chart.DefaultView.ChartArea.Annotations.Add(gridlinePositive);

                    //негативне значення
                    CustomGridLine gridlineNegative = new CustomGridLine();
                    gridlineNegative.YIntercept = 5;
                    gridlineNegative.Stroke = new SolidColorBrush(Colors.Tomato);
                    gridlineNegative.StrokeThickness = 2;
                    this.Chart.DefaultView.ChartArea.Annotations.Add(gridlineNegative);
                }
                //для відсутності
                if (comboItem.Name.ToString() == "Absence")
                {
                    //позитивне значення
                    CustomGridLine gridlinePositive = new CustomGridLine();
                    gridlinePositive.YIntercept = 3;
                    gridlinePositive.Stroke = new SolidColorBrush(Colors.Chartreuse);
                    gridlinePositive.StrokeThickness = 2;
                    this.Chart.DefaultView.ChartArea.Annotations.Add(gridlinePositive);
                   
                    //негативне значення
                    CustomGridLine gridlineNegative = new CustomGridLine();
                    gridlineNegative.YIntercept = 15;
                    gridlineNegative.Stroke = new SolidColorBrush(Colors.Tomato);
                    gridlineNegative.StrokeThickness = 2;
                    this.Chart.DefaultView.ChartArea.Annotations.Add(gridlineNegative);
                }
                
            }
        }

        //Закрити вікно
        private void CloseButton_Click(object sender, RoutedEventArgs e)
        {
            // приховання форми
            this.Hide(); 
            //очищення графіку та скидання елементів
            ClearChart(); 
        }

        //Експорт
        private void ExportButton_OnClick(object sender, RoutedEventArgs e)
        {
            ComboBoxItem comboItem = (ComboBoxItem)ComboBox.SelectedItem;

            //Експорт в png
            if (comboItem.Name != null && comboItem.Name.ToString() == "Png")
            {
                SaveFileDialog dialog = new SaveFileDialog();
                dialog.RestoreDirectory = true;
                dialog.DefaultExt = "*.Png ";
                dialog.Title = "Збереження";
                dialog.Filter = "Файл зображення (*.png )|*.png ";
                if (dialog.ShowDialog() == true)
                {
                    //збереження файлу
                    Stream fileStream = dialog.OpenFile();
                    Chart.ExportToImage(fileStream);
                    fileStream.Close();
                    //Повідомлення про успішне експортування
                    MessageBox.Show("Експорт у файл Png успішно виконано!", "Повідомлення",
                        MessageBoxButton.OK, MessageBoxImage.Information);

                }
            }

            //Експорт в ExcelML
            if (comboItem.Name != null && comboItem.Name.ToString() == "ExcelMl")
            {
                SaveFileDialog dialog = new SaveFileDialog();
                dialog.RestoreDirectory = true;
                dialog.DefaultExt = "*.xlsx";
                dialog.Title = "Збереження";
                dialog.Filter = "Таблиця Excel (*.xlsx)|*.xlsx";
                if (dialog.ShowDialog() == true)
                {
                    //збереження файлу
                    Stream fileStream = dialog.OpenFile();
                    Chart.ExportToExcelML(fileStream);
                    fileStream.Close();
                    //Повідомлення про успішне експортування
                    MessageBox.Show("Експорт у файл ExcelMl успішно виконано!", "Повідомлення",
                        MessageBoxButton.OK, MessageBoxImage.Information);
                }
            }

            //Експорт в xps
            if (comboItem.Name != null && comboItem.Name.ToString() == "Xps")
            {
                SaveFileDialog dialog = new SaveFileDialog();
                dialog.RestoreDirectory = true;
                dialog.DefaultExt = "*.xps";
                dialog.Title = "Збереження";
                dialog.Filter = "Документ (*.xps )|*.xps ";

                if (dialog.ShowDialog() == true)
                {
                    //збереження файлу
                    Stream fileStream = dialog.OpenFile();
                    Chart.ExportToXps(fileStream);
                    fileStream.Close();
                    //Повідомлення про успішне експортування
                    MessageBox.Show("Експорт у файл Xps успішно виконано!", "Повідомлення",
                        MessageBoxButton.OK, MessageBoxImage.Information);
                }
            }

        }
        //Приховання вікна при його закритті
        private void StatisticsWindow_Closing(object sender, CancelEventArgs e)
        {
            //відміна закриття вікна
            e.Cancel = true;    
            // приховання форми
            this.Hide();
            //очищення графіку та скидання елементів
            ClearChart(); 
        }

        //очищення графіку та скидання елементів за замовчуванням
        private void ClearChart()
        {
            _clearElements.DefaultValueComboBoxes(this);
            //очищення графіку
            Chart.SeriesMappings.Clear();
            Chart.DefaultView.ChartArea.DataSeries.Clear();
            Chart.DefaultView.ChartLegend.Items.Clear();
            Chart.DefaultView.ChartTitle.Content = null;
        }
    }
}
